name: LateX CV to PDF 

on: [push]
permissions:
    contents: write

jobs:
  build_latex:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v2
      - name: latex2pdf
        id: compile-latex-document
        uses: thomas-chauvet/latex2pdf-action@1.0.4
        with:
          output_dir: .
          main_latex_file: main.tex
          ctan_packages: marvosym float arydshln luatexbase multirow fontawesome5 xargs lipsum enumitem tabularx changepage qrcode multirow import fontspec supertabular titlesec hyperref etaremune
      - name: latex2pdf
        id: compile-latex-document-2
        uses: thomas-chauvet/latex2pdf-action@1.0.4
        with:
            output_dir: .
            main_latex_file: main.tex
            ctan_packages: marvosym float arydshln luatexbase multirow fontawesome5 xargs lipsum enumitem tabularx changepage qrcode multirow import fontspec supertabular titlesec hyperref etaremune
      - name: Upload CV in PDF to the workflow tab
        id: upload-workflow-tab
        uses: actions/upload-artifact@v4
        with:
          name: cv
          path: ./main.pdf

      # - name: Checkout
      #   uses: actions/checkout@v2

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
    
      # - name: Pushes test file
      #   uses: dmnemec/copy_file_to_another_repo_action@main
      #   env:
      #     API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
      #   with:
      #     source_file: 'cv/main.pdf'
      #     destination_repo: 'archfx/CV'
      #     destination_folder: 'PDF'
      #     user_email: ${{ secrets.USER_EMAIL }}
      #     user_name: ${{ secrets.REPO_USER }}'
      #     commit_message: Automatically Generated on ${{ steps.date.outputs.date }}

      - name: GIT commit and push docs
        env: 
          CI_COMMIT_MESSAGE: Continuous Integration Build Artifacts on ${{ steps.date.outputs.date }}
          CI_COMMIT_AUTHOR: Continuous Integration
        run: |
          git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
          git config --global user.email "username@users.noreply.github.com"
          git add main.pdf
          git commit -m "${{ env.CI_COMMIT_MESSAGE }}"
          git remote update
          git fetch
          git checkout --track origin/gh-pages
          git checkout main main.pdf
          git add main.pdf
          git commit -m "${{ env.CI_COMMIT_MESSAGE }}"
          git push 

      # - name: Push
      #   uses: s0/git-publish-subdir-action@develop
      #   env:
      #     REPO: self
      #     BRANCH: gh-pages # The branch name where you want to push the assets
      #     FOLDER: cv # The directory where your assets are generated
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub will automatically add this - you don't need to bother getting a token
      #     MESSAGE: Automatically Generated on ${{ steps.date.outputs.date }} # The commit message
